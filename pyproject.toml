[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "frappe-supabase-sync"
version = "1.0.0"
description = "Bidirectional data synchronization between Frappe ERP and Supabase with intelligent field mapping and webhook support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Teachafy", email = "dev@teachafy.com"}
]
maintainers = [
    {name = "Teachafy", email = "dev@teachafy.com"}
]
keywords = ["frappe", "supabase", "sync", "webhook", "erp", "database"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Archiving :: Synchronization",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.24.0,<0.25.0",
    "supabase>=2.0.0",
    "redis>=5.0.0",
    "aioredis>=2.0.0",
    "structlog>=23.2.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "prometheus-client>=0.19.0",
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.3",
    "celery>=5.3.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.9",
    "aiofiles>=23.2.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "asyncio-mqtt>=0.16.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "factory-boy>=3.2.0",
    "faker>=19.0.0",
    "responses>=0.23.0",
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
    "locust>=2.16.0",
    "memory-profiler>=0.60.0",
    "pytest-postgresql>=4.1.0",
    "pytest-redis>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]

[project.urls]
Homepage = "https://github.com/teachafy/frappe-supabase-sync"
Documentation = "https://github.com/teachafy/frappe-supabase-sync#readme"
Repository = "https://github.com/teachafy/frappe-supabase-sync.git"
"Bug Tracker" = "https://github.com/teachafy/frappe-supabase-sync/issues"
Changelog = "https://github.com/teachafy/frappe-supabase-sync/blob/main/CHANGELOG.md"

[project.scripts]
frappe-supabase-sync = "main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.toml"]

[tool.black]
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 127
known_first_party = ["src"]
known_third_party = ["fastapi", "uvicorn", "httpx", "redis", "structlog", "pydantic"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "structlog.*",
    "prometheus_client.*",
    "respx.*",
    "jose.*",
    "passlib.*",
    "multipart.*",
    "mqtt.*",
    "aiofiles.*",
    "aioredis.*",
    "asyncpg.*",
    "sqlalchemy.*",
    "alembic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "webhook: marks tests as webhook tests",
    "sync: marks tests as sync engine tests",
    "mapping: marks tests as field mapping tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", "env"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
